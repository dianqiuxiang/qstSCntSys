<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀)
-->
    <mapper namespace="com.qst.scnt.dao.impl.CostDaoImpl">
		
		      
		   <!-- 新增Cost实体类 -->  
		    <insert id="insert" parameterType="cost">  
		        insert into cost (expenseItemID, expenseAmount, 
			      expenseDate, salesDepartmentID, isDelete
			      )
			    values (#{expenseItemID,jdbcType=INTEGER}, #{expenseAmount,jdbcType=DECIMAL}, 
			      #{expenseDate,jdbcType=DATE}, #{salesDepartmentID,jdbcType=INTEGER}, #{isDelete,jdbcType=INTEGER}
			      )
		   </insert>  		    
		     
		   <!-- 批量插入 -->  
		   <insert id="insertBatch" parameterType="arraylist">  
		        insert into cost (expenseItemID, expenseAmount, 
			      expenseDate, salesDepartmentID, isDelete
			      )
			    values 
		        <!-- collection可以是List对于list,数组对于array,Map对应ids -->
		        <foreach collection="list" item="item"  index="index" separator=",">
        			<trim prefix=" (" suffix=")" suffixOverrides=",">
        			#{item.expenseItemID,jdbcType=INTEGER}, #{item.expenseAmount,jdbcType=DECIMAL}, 
			        #{item.expenseDate,jdbcType=DATE}, #{item.salesDepartmentID,jdbcType=INTEGER}, #{item.isDelete,jdbcType=INTEGER}    
		        	</trim>   
           		</foreach>  
		   </insert>
		     
		   <!-- 更新对象 -->  
		   <update id="update" parameterType="cost">  
		      	update cost
				    <set >
				      <if test="expenseItemID != null" >
				        expenseItemID = #{expenseItemID,jdbcType=INTEGER},
				      </if>
				      <if test="expenseAmount != null" >
				        expenseAmount = #{expenseAmount,jdbcType=DECIMAL},
				      </if>
				      <if test="expenseDate != null" >
				        expenseDate = #{expenseDate,jdbcType=DATE},
				      </if>
				      <if test="salesDepartmentID != null" >
				        salesDepartmentID = #{salesDepartmentID,jdbcType=INTEGER},
				      </if>
				      <if test="isDelete != null" >
				        isDelete = #{isDelete,jdbcType=INTEGER},
				      </if>
				    </set>
				    where id = #{id,jdbcType=INTEGER}
		   </update>		   
		     
		   <!-- 更新对象（自定义范围） -->  
		    <update id="updateFields" parameterType="java.util.Map">  
		      update cost   
		      <set>  
			    <foreach collection="fields.entrySet()" index="key" item="value" separator=","> 			  
			        ${key} = #{value}  
			    </foreach>  
			  </set>  
			  <where>
			  	<foreach collection="where.entrySet()" index="key" item="value" separator="and">
			        ${key} = #{value} 
			    </foreach> 
              </where>  
		   </update>  
		     
		    <!-- 批量更新 -->  
		   <update id="updateBatch" parameterType="java.util.List">  
		        <!-- collection可以是List对于list,数组对于array,Map对应ids -->
		        update cost
			        <trim prefix="set" suffixOverrides=",">
			            <trim prefix="expenseItemID = case" suffix="end,">
			                 <foreach collection="list" item="item" index="index">
			                     <if test="item.expenseItemID !=null">
			                         when id=#{item.id} then #{item.expenseItemID,jdbcType=INTEGER}
			                     </if>
			                 </foreach>
			            </trim>
			            
			            <trim prefix="expenseAmount = case" suffix="end,">
			                 <foreach collection="list" item="item" index="index">
			                     <if test="item.expenseAmount !=null">
			                         when id=#{item.id} then #{item.expenseAmount,jdbcType=DECIMAL}
			                     </if>
			                 </foreach>
			            </trim>
			            
			            <trim prefix="expenseDate = case" suffix="end,">
			                 <foreach collection="list" item="item" index="index">
			                     <if test="item.expenseDate !=null">
			                         when id=#{item.id} then #{item.expenseDate,jdbcType=DATE}
			                     </if>
			                 </foreach>
			            </trim>
			            
			            <trim prefix="salesDepartmentID = case" suffix="end,">
			                 <foreach collection="list" item="item" index="index">
			                     <if test="item.salesDepartmentID !=null">
			                         when id=#{item.id} then #{item.salesDepartmentID,jdbcType=INTEGER}
			                     </if>
			                 </foreach>
			            </trim>

						<trim prefix="isDelete = case" suffix="end,">
			                 <foreach collection="list" item="item" index="index">
			                     <if test="item.isDelete !=null">
			                         when id=#{item.id} then #{item.isDelete,jdbcType=INTEGER}
			                     </if>
			                 </foreach>
			            </trim>
			        </trim>
			        where id in
			        <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
			            #{item.id,jdbcType=INTEGER}
			        </foreach>  
		   </update>  
		     
		   <!-- 根据主键删除 -->  
		   <delete id="deletePK" parameterType="int">  
		        delete from cost where id = #{id}  
		   </delete>  
		     
		   <!-- 根据参数删除 -->  
		   <delete id="deleteParam" parameterType="java.util.Map">  
		        delete from cost  
				  <where>
				  	<foreach collection="where.entrySet()" index="key" item="value" separator="and">
				        ${key} = #{value} 
				    </foreach> 
	              </where>   
		   </delete>  
		     
		   <!-- 批量删除 -->  
		   <delete id="deleteBatch">  
		        delete from cost where id in   
		        <trim prefix="(" suffix=")" suffixOverrides=",">  
		            <foreach collection="list" item="pk" separator=",">  
		                #{pk}  
		            </foreach>  
		        </trim>  
		   </delete>  
		   
		   <!-- 整表内容删除 -->  
		   <delete id="truncate">  
		        delete from cost 
		   </delete>  
		     
		   <!-- count -->  
		   <select id="count" resultType="int">  
		        select count(*) from cost e   where isDelete=0
		  </select>  
		  <select id="countParam" parameterType="java.util.Map" resultType="int">  
		        select count(*) from cost e   
		        <where>
				  	<foreach collection="where.entrySet()" index="key" item="value" separator="and">
				        ${key} = #{value} 
				    </foreach> 
	              </where> 
	              and isDelete=0
		  </select>
		  
		  <!-- 查询 -->  
		   <select id="select" parameterType="Integer" resultType="cost">  
		        select * from cost where isDelete=0
		   </select>
		  
		   <!-- 查询（参数） -->  
		   <select id="selectPk" parameterType="Integer" resultType="cost">  
		        select * from cost  where id = #{id} and isDelete=0
		   </select>  
		    
		   <!-- 查询（参数） -->  
		   <select id="selectParam" parameterType="java.util.Map" resultType="cost">  
		        select * from cost   
		       <where>
				  	<foreach collection="where.entrySet()" index="key" item="value" separator="and">
				        ${key} = #{value} 
				    </foreach> 
	              </where> 
	              and isDelete=0
		   </select>
		   
		   <!-- 查询（模糊查询，参数） -->  
		   <select id="selectParamFlexible" parameterType="cost" resultType="cost">  
		        select * from cost   
					<trim prefix="WHERE" prefixOverrides="and |or">
					<if test="expenseItemID != null" >
					and expenseItemID = #{expenseItemID}
					</if>
					<if test="expenseAmount != null" >
					and expenseAmount = #{expenseAmount}
					</if>
					<if test="expenseDate != null" >
					and expenseDate = #{expenseDate}
					</if>
					<if test="salesDepartmentID != null" >
					and salesDepartmentID = #{salesDepartmentID}
					</if>
					and isDelete=0
					</trim>
		   </select>
		   
		  <!-- 查询（参数,根据起始时间查询） -->  
		   <select id="selectByItemIdAndStartAndEndDate" parameterType="java.util.Map" resultType="cost">  
		        select c.*,e.expenseItem,s.salesDepartmentName from cost c,expenseItem e,salesdePartmentInfo s
		        <trim prefix="WHERE" prefixOverrides="and |or">
				<if test="salesDepartmentIDList !=null">
				and c.salesDepartmentID IN
				<foreach collection="salesDepartmentIDList" item="salesDepartmentID"  open="(" separator="," close=")">
				#{salesDepartmentID.id}
				</foreach>
				</if>
	         	<if test="startDate!=null and startDate!='' ">  
		          <![CDATA[and c.expenseDate>= #{startDate}   ]]> 
		        </if>  
		        <if test="endDate!=null and endDate!=''">  
		        <![CDATA[and c.expenseDate <=  #{endDate}    ]]>
		        </if> 
	        	<if test="expenseItemID!=null and expenseItemID!='' ">  
		        and c.expenseItemID =  #{expenseItemID}
		        </if>
		        and c.isDelete=0
	            and c.expenseItemID=e.id
	            and c.salesDepartmentID=s.id
	            ORDER BY c.expenseDate DESC
				</trim>		        
		   </select>
		   
		   <!-- 查询（参数） -->  
		   <select id="selectBySDeptIdAndYM" parameterType="java.util.Map" resultType="java.util.HashMap">  
		        select sum(a.expenseAmount) as sumCostAmount from cost a,expenseItem b  where month(a.expenseDate) =
				month(#{salesDate}) and year(a.expenseDate) = year(#{salesDate}) and a.salesDepartmentID = #{salesDepartmentID}
				and b.expenseItem=#{expenseItem}
				and a.expenseItemID=b.id
				and a.isDelete=0
		   </select>
		   
		   <!-- 查询（参数） -->  
		   <select id="selectBySDeptIdAndY" parameterType="java.util.Map" resultType="java.util.HashMap">  
		        select sum(a.expenseAmount) as sumCostAmount from cost a,expenseItem b  where year(a.expenseDate) = year(#{salesDate}) and a.salesDepartmentID = #{salesDepartmentID}
				and b.expenseItem=#{expenseItem}
				and a.expenseItemID=b.id
				and a.isDelete=0
		   </select>
    </mapper>