<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀)
-->
    <mapper namespace="com.qst.scnt.dao.impl.UserInfoDaoImpl">
		      
		   <!-- 新增userInfo实体类 -->  
		    <insert id="insert" parameterType="userInfo">  
		        insert into userInfo (userName, pwd, 
			      userPhone, userEmail, salesDepartmentID, 
			      isDelete)
			    values (#{userName,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR}, 
			      #{userPhone,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, #{salesDepartmentID,jdbcType=INTEGER}, 
			      #{isDelete,jdbcType=INTEGER})  
		   </insert>  		    
		     
		   <!-- 批量插入 -->  
		   <insert id="insertBatch" parameterType="arraylist">  
		        insert into userInfo (userName, pwd, 
			      userPhone, userEmail, salesDepartmentID, 
			      isDelete)
			    values    
		        <!-- collection可以是List对于list,数组对于array,Map对应ids -->
		        <foreach collection="list" item="item"  index="index" separator=",">
        			<trim prefix=" (" suffix=")" suffixOverrides=",">        			
        			#{item.userName,jdbcType=VARCHAR}, #{item.pwd,jdbcType=VARCHAR}, 
			      #{item.userPhone,jdbcType=VARCHAR}, #{item.userEmail,jdbcType=VARCHAR}, 
			      #{item.salesDepartmentID,jdbcType=INTEGER}, 
			      #{item.isDelete,jdbcType=INTEGER}      
		        	</trim>   
           		</foreach>		         
		   </insert>
		     
		   <!-- 更新对象 -->  
		   <update id="update" parameterType="userInfo">  
		      	update userInfo
			    <set >
			      <if test="userName != null" >
			        userName = #{userName,jdbcType=VARCHAR},
			      </if>
			      <if test="pwd != null" >
			        pwd = #{pwd,jdbcType=VARCHAR},
			      </if>
			      <if test="userPhone != null" >
			        userPhone = #{userPhone,jdbcType=VARCHAR},
			      </if>
			      <if test="userEmail != null" >
			        userEmail = #{userEmail,jdbcType=VARCHAR},
			      </if>
			      <if test="salesDepartmentID != null" >
			        salesDepartmentID = #{salesDepartmentID,jdbcType=INTEGER},
			      </if>
			      <if test="isDelete != null" >
			        isDelete = #{isDelete,jdbcType=INTEGER},
			      </if>
			    </set>
			    where id = #{id,jdbcType=INTEGER}
		   </update>		   
		     
		   <!-- 更新对象（自定义范围） -->  
		    <update id="updateFields" parameterType="java.util.Map">  
		      update userInfo   
		      <set>  
			    <foreach collection="fields.entrySet()" index="key" item="value" separator=","> 			  
			        ${key} = #{value}  
			    </foreach>  
			  </set>  
			  <where>
			  	<foreach collection="where.entrySet()" index="key" item="value" separator="and">
			        ${key} = #{value} 
			    </foreach> 
              </where>  
		   </update>  
		     
		    <!-- 批量更新 -->
		   <update id="updateBatch" parameterType="java.util.List">  
		        <!-- collection可以是List对于list,数组对于array,Map对应ids -->
		        update userInfo
			        <trim prefix="set" suffixOverrides=",">
			            <trim prefix="userName = case" suffix="end,">
			                 <foreach collection="list" item="item" index="index">
			                     <if test="item.userName !=null">
			                         when id=#{item.id} then #{item.userName,jdbcType=VARCHAR}
			                     </if>
			                 </foreach>
			            </trim>
			            
			            <trim prefix="pwd = case" suffix="end,">
			                 <foreach collection="list" item="item" index="index">
			                     <if test="item.pwd !=null">
			                         when id=#{item.id} then #{item.pwd,jdbcType=VARCHAR}
			                     </if>
			                 </foreach>
			            </trim>
			            
			            <trim prefix="userPhone = case" suffix="end,">
			                 <foreach collection="list" item="item" index="index">
			                     <if test="item.userPhone !=null">
			                         when id=#{item.id} then #{item.userPhone,jdbcType=VARCHAR}
			                     </if>
			                 </foreach>
			            </trim>
			            
			            <trim prefix="userEmail = case" suffix="end,">
			                 <foreach collection="list" item="item" index="index">
			                     <if test="item.userEmail !=null">
			                         when id=#{item.id} then #{item.userEmail,jdbcType=VARCHAR}
			                     </if>
			                 </foreach>
			            </trim>
			            
			            <trim prefix="salesDepartmentID = case" suffix="end,">
			                 <foreach collection="list" item="item" index="index">
			                     <if test="item.salesDepartmentID !=null">
			                         when id=#{item.id} then #{item.salesDepartmentID,jdbcType=INTEGER}
			                     </if>
			                 </foreach>
			            </trim>
			            
			            <trim prefix="isDelete = case" suffix="end,">
			                 <foreach collection="list" item="item" index="index">
			                     <if test="item.isDelete !=null">
			                         when id=#{item.id} then #{item.isDelete,jdbcType=INTEGER}
			                     </if>
			                 </foreach>
			            </trim>
			        </trim>
			        where id in
			        <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
			            #{item.id,jdbcType=INTEGER}
			        </foreach>  
		   </update>  
		     
		   <!-- 根据主键删除 -->  
		   <delete id="deletePK" parameterType="int">  
		        delete from userInfo where id = #{id}  
		   </delete>  
		     
		   <!-- 根据参数删除 -->  
		   <delete id="deleteParam" parameterType="java.util.Map">  
		        delete from userInfo  
				  <where>
				  	<foreach collection="where.entrySet()" index="key" item="value" separator="and">
				        ${key} = #{value} 
				    </foreach> 
	              </where>   
		   </delete>  
		     
		   <!-- 批量删除 -->  
		   <delete id="deleteBatch">  
		        delete from userInfo where id in   
		        <trim prefix="(" suffix=")" suffixOverrides=",">  
		            <foreach collection="list" item="pk" separator=",">  
		                #{pk}  
		            </foreach>  
		        </trim>  
		   </delete>  
		   
		   <!-- 整表内容删除 -->  
		   <delete id="truncate">  
		        delete from userInfo 
		   </delete>  
		     
		   <!-- count -->  
		   <select id="count" resultType="int">  
		        select count(*) from userInfo e  where isDelete=0 
		  </select>  
		  <select id="countParam" parameterType="java.util.Map" resultType="int">  
		        select count(*) from userInfo e   
		        <where>
				  	<foreach collection="where.entrySet()" index="key" item="value" separator="and">
				        ${key} = #{value} 
				    </foreach> 
	              </where> 
	              and isDelete=0
		  </select>
		  
		  <!-- 查询 -->  
		   <select id="select" parameterType="Integer" resultType="userInfo">  
		        select * from userInfo where isDelete=0
		   </select>
		  
		   <!-- 查询（参数） -->  
		   <select id="selectPk" parameterType="Integer" resultType="userInfo">  
		        select * from userInfo   where id = #{id} and isDelete=0
		   </select>  
		    
		   <!-- 查询（参数） -->  
		   <select id="selectParam" parameterType="java.util.Map" resultType="userInfo">  
		        select * from userInfo   
		       <where>
				  	<foreach collection="where.entrySet()" index="key" item="value" separator="and">
				        ${key} = #{value} 
				    </foreach> 
	           </where> 
	           and isDelete=0
		   </select>
		   
		   <!-- 查询（模糊查询，参数） -->  
		   <select id="selectParamFlexible" parameterType="userInfo" resultType="userInfo">  
		        select * from userInfo  
		        <trim prefix="WHERE" prefixOverrides="and |or">
					<if test="userName != null" >
						and userName like "%"#{userName}"%"</if>
					<if test="pwd != null" >
						and pwd = #{pwd}
					</if>
					<if test="userPhone != null" >
						and userPhone like "%"#{userPhone}"%"
					</if>
					<if test="userEmail != null" >
						and userEmail like "%"#{userEmail}"%"
					</if>
					<if test="salesDepartmentID != null" >
						and salesDepartmentID = #{salesDepartmentID}
					</if>
						and isDelete=0
				</trim> 
		   </select>
	    
	    <!-- 根据用户名，密码查询（参数），登录 -->  
		   <select id="login" parameterType="userInfo" resultType="userInfo">  
		        select * from userInfo where userName = #{userName} and pwd = #{pwd} and isDelete=0
		   </select> 
    </mapper>